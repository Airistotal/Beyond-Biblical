//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BE_webapp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using System.Data;

    public partial class bibex_dbEntities : DbContext
    {
        public bibex_dbEntities()
            : base("name=bibex_dbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<bible_version_key> bible_version_key { get; set; }
        public virtual DbSet<key_abbreviations_english> key_abbreviations_english { get; set; }
        public virtual DbSet<key_english> key_english { get; set; }
        public virtual DbSet<key_genre_english> key_genre_english { get; set; }
    
        public virtual ObjectResult<BibleVerse> usp_GetVerse(Nullable<int> bible, Nullable<int> book, Nullable<int> chapter, Nullable<int> verse)
        {
            var bibleParameter = bible.HasValue ?
                new ObjectParameter("bible", bible) :
                new ObjectParameter("bible", typeof(int));
    
            var bookParameter = book.HasValue ?
                new ObjectParameter("book", book) :
                new ObjectParameter("book", typeof(int));
    
            var chapterParameter = chapter.HasValue ?
                new ObjectParameter("chapter", chapter) :
                new ObjectParameter("chapter", typeof(int));
    
            var verseParameter = verse.HasValue ?
                new ObjectParameter("verse", verse) :
                new ObjectParameter("verse", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BibleVerse>("usp_GetVerse", bibleParameter, bookParameter, chapterParameter, verseParameter);
        }
    
        public virtual ObjectResult<usp_GetChapterInfo_Result> usp_GetChapterInfo(Nullable<int> book, Nullable<int> chapter)
        {
            var bookParameter = book.HasValue ?
                new ObjectParameter("book", book) :
                new ObjectParameter("book", typeof(int));
    
            var chapterParameter = chapter.HasValue ?
                new ObjectParameter("chapter", chapter) :
                new ObjectParameter("chapter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetChapterInfo_Result>("usp_GetChapterInfo", bookParameter, chapterParameter);
        }
    
        public virtual ObjectResult<BibleVerse> usp_GetChapter(DataTable Bibles, Nullable<int> book, Nullable<int> chapter)
        {
            var biblesParameter = new ObjectParameter("bibles", Bibles);

            var bookParameter = book.HasValue ?
                new ObjectParameter("book", book) :
                new ObjectParameter("book", typeof(int));
    
            var chapterParameter = chapter.HasValue ?
                new ObjectParameter("chapter", chapter) :
                new ObjectParameter("chapter", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BibleVerse>("usp_GetChapter", biblesParameter, bookParameter, chapterParameter);
        }
    }
}
